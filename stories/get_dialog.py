from functools import lru_cache
from dialoger import Dialog, TextReply, DialogAPI, Voice
from stories.AtLessonStory import AtLessonStory
from stories.BadBoys import BadBoys
from stories.CourtOfLawStory import CourtOfLawStory
from stories.InZooStory import InZooStory
from stories.ProverbsStory import ProverbsStory
from stories.story import Story


@lru_cache(maxsize=64)
def get_dialog(session_id: str) -> Dialog:
    """
    –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ ¬´–°–∞–º—ã–µ —Å–º–µ—à–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏¬ª
    """
    dialog = Dialog(intents_stopwords=["–∞–ª–∏—Å–∞"], voice=Voice.SHITOVA_GPU)
    api = DialogAPI(dialog)

    async def end_current_story():
        stories.pop(0)

        if stories:
            api.say("–í–æ—Ç —Ç–∞–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è.")
            api.say("–•–æ—á–µ—à—å –ø–æ—Å–ª—É—à–∞—Ç—å –µ—â—ë –æ–¥–Ω—É?")

            api.otherwise(start_next_story)
        else:
            api.say("–ù–∞ —Å–µ–≥–æ–¥–Ω—è —ç—Ç–æ –≤—Å–µ –∏—Å—Ç–æ—Ä–∏–∏.", "–•–æ—á–µ—à—å –ø–æ—Å–ª—É—à–∞—Ç—å –∏—Ö –µ—â—ë —Ä–∞–∑?")

            @api.intent(include_yes=True)
            async def _():
                stories.extend(get_stories())
                await start_next_story()

            def _no():
                api.say(
                    TextReply("–¢—É—Ç –∏ —Å–∫–∞–∑–∫–∏ –∫–æ–Ω–µ—Ü. –ê –∫—Ç–æ —Å–ª—É—à–∞–ª ‚Äì –º–æ–ª–æ–¥–µ—Ü", end=True)
                )

            api.intent(include_no=True)(_no)
            api.otherwise(_no)

    def get_stories():
        return [
            InZooStory(api, end_current_story),
            BadBoys(api, end_current_story),
            CourtOfLawStory(api, end_current_story),
            ProverbsStory(api, end_current_story),
            AtLessonStory(api, end_current_story),
        ]

    stories: list[Story] = get_stories()

    @api.what_can_you_do
    async def _():
        api.say(
            "–≠—Ç–∞ –∏–≥—Ä–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´–°–∞–º—ã–µ —Å–º–µ—à–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏¬ª",
            "–í –Ω–µ–π –º—ã –≤–º–µ—Å—Ç–µ —Å–æ—á–∏–Ω–∏–º –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ.",
            "–î–ª—è —ç—Ç–æ–≥–æ —è –±—É–¥—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∞ —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–±–∞–≤–ª—é –≤ –Ω—É–∂–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–µ –∏ –ø—Ä–æ—á–∏—Ç–∞—é –∏—Å—Ç–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É –Ω–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è.",
        )

        if stories:
            api.say("–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å.")

            await stories[0].call_current_step()

    @api.help
    async def _():
        api.say(
            "–ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å, —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–ª—É—à–∞—Ç—å –º–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–∏—Ö. –ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É, —Å–∫–∞–∂–∏ ¬´–•–≤–∞—Ç–∏—Ç¬ª.",
        )

        if stories:
            api.say("–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å.")

            await stories[0].call_current_step()

    @api.otherwise
    def _():
        api.say(
            "–•–æ—Ä–æ—à–æ. –Ø –∑–Ω–∞—é –º–Ω–æ–≥–æ –≤–µ—Å—ë–ª—ã—Ö –∏—Å—Ç–æ—Ä–∏–π –∏ –≤—Å–µ –æ–Ω–∏ ‚Äì —á–∏—Å—Ç–∞—è –ø—Ä–∞–≤–¥–∞. –•–æ—á–µ—à—å, —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ —á—Ç–æ-–Ω–∏–±—É–¥—å?",
            "–Ø –±—É–¥—É –∑–∞–¥–∞–≤–∞—Ç—å —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å—ã. –¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–º–æ–≥—É—Ç –º–Ω–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ.",
            "–ù–∞—á–∏–Ω–∞–µ–º?",
        )

        # üî• button –¥–∞–ª—å—à–µ

        api.otherwise(start_next_story)

    async def start_next_story():
        story = stories[0]

        if story:
            await story.call_current_step()
        else:
            api.say(
                TextReply(
                    "–û–π! –ö–∞–∂–µ—Ç—Å—è, —É –º–µ–Ω—è –º–æ–ª–æ–∫–æ —É–±–µ–∂–∞–ª–æ! –ú–Ω–µ –ø–æ—Ä–∞. –ü–æ–∫–∞, –±–∞–≤—ã–π",
                    end=True,
                )
            )

    # Debug API
    # ---------
    @api.trigger(lambda i: i.utterance == "last", time_to_live=100500)
    async def _(_):
        last = stories.pop()
        stories.clear()
        stories.append(last)
        await start_next_story()

    return dialog
