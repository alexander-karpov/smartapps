from dialoger import TextReply, Voice
from enrichment import add_random_adjective
from morphy import by_gender, inflect
from stories.story import Story, StoryStep


class InZooStory(Story):
    """
    –û–¥–Ω–∞–∂–¥—ã –≤ –ø–æ–ª–Ω–æ—á—å –≤ –∑–æ–æ–ø–∞—Ä–∫ —Ä–µ—à–∏–ª–∏ –Ω–∞–≤–µ–¥–∞—Ç—å—Å—è —Ç—Ä–æ–µ –¥—Ä—É–∑–µ–π - –í–∞—Å—è, –ü–µ—Ç—è –∏ –ú–∏—à–∞. –û–Ω–∏ –∑–∞–±—Ä–∞–ª–∏—Å—å —á–µ—Ä–µ–∑ –∑–∞–±–æ—Ä, —á—Ç–æ–±—ã –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏, –∫–æ–≥–¥–∞ –≤—Å–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ —É–∂–µ —É—à–ª–∏.
    –í–Ω–µ–∑–∞–ø–Ω–æ, –∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞ –ø–æ—è–≤–∏–ª–∞—Å—å —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–æ–æ–ø–∞—Ä–∫–∞ - —Å—Ç—Ä–∞—à–Ω–∞—è —Å—Ç–∞—Ä—É—Ö–∞ —Å –∫–æ—Å–æ–π.
    –î—Ä—É–∑—å—è –≤ —É–∂–∞—Å–µ —Å–µ–ª–∏ –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–ø–∞–≤—à—É—é—Å—è —Å–∫–∞–º–µ–π–∫—É –∏ —Ç—É—Ç –∂–µ –ø—Ä–∏—Ç–≤–æ—Ä–∏–ª–∏—Å—å —Å—Ç–∞—Ç—É—è–º–∏, –Ω–∞–¥–µ—è—Å—å, —á—Ç–æ —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏—Ö –Ω–µ –∑–∞–º–µ—Ç–∏—Ç.
    –°—Ç–∞—Ä—É—Ö–∞ –º–µ–¥–ª–µ–Ω–Ω–æ –∏–¥–µ—Ç –≤ –∏—Ö —Å—Ç–æ—Ä–æ–Ω—É, –æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –ø—É—Å—Ç—É—é—â–∏–π –∑–æ–æ–ø–∞—Ä–∫. –ü–æ–¥–æ–π–¥—è –±–ª–∏–∂–µ, –æ–Ω–∞ –≥–ª—è–¥–∏—Ç –Ω–∞ "—Å—Ç–∞—Ç—É–∏" –∏ –∫—Ä–∏—á–∏—Ç: "–ê–≥–∞, —è –≤–∞—Å —Ä–∞–∑–æ–±–ª–∞—á—É!"
    –û–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –í–∞—Å–µ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: "–¢—ã —Å—Ç–∞—Ç—É—è?"
    –í–∞—Å—è –Ω–µ –º–æ—Ä–≥–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–∫–æ—Ä—É—é —Ä—É–∫—É:
    - –Ω–µ—Ç, —è –Ω–æ—Å–æ—Ä–æ–≥ –¥–∞–∂–µ –µ—Å–ª–∏ —è –∏ –Ω–µ –¥–≤–∏–≥–∞—é—Å—å
    –°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ö–º—É—Ä–æ –∫–∏–≤–∞–µ—Ç –∏ –∏–¥–µ—Ç –∫ –ü–µ—Ç–µ:
    - –ê —Ç—ã —Å—Ç–∞—Ç—É—è?
    –ü–µ—Ç—è –æ—Ç–≤–µ—Ç–∏–ª –≤ —Ç–æ–Ω:
    - –ù–µ—Ç, —è —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–π –ª–µ–æ–ø–∞—Ä–¥, –∏ –¥–∞–∂–µ –µ—Å–ª–∏ —è –∏ –Ω–µ –¥–≤–∏–≥–∞—é—Å—å, —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —è –Ω–µ –µ–º.
    –°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –Ω–∞ –º–∏–Ω—É—Ç—É –∑–∞–¥—É–º–∞–ª–∞—Å—å, –ø–æ—á–µ—Å–∞–ª–∞ –∫–æ—Å–æ–π –ø–æ –¥–µ—Ä–µ–≤—É, –∞ –∑–∞—Ç–µ–º –∏–¥–µ—Ç –∫ –ú–∏—à–µ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:
    - –¢–∞–∫ –∏ —Ç—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —Ç–æ–∂–µ –Ω–µ —Å—Ç–∞—Ç—É—è?
    –ú–∏—à–∞ –æ—Ç–≤–µ—á–∞–µ—Ç:
    - –Ø, –ø—Ä–∞–≤–¥–∞, —Å—Ç–∞—Ç—É—è! –ù–æ –¥–æ —Å–∏—Ö –ø–æ—Ä –º–æ–≥ –Ω–∞–ø—É–≥–∞—Ç—å –≤–∞—Å —Å–≤–æ–∏–º –≥–∏–ø—Å–∞–∫–æ–º, –∫–æ–≥–¥–∞ –º–æ–∏ –¥—Ä—É–∑—å—è —É–∂–µ –æ—Ç–≤–µ—Ä–≥–∞–ª–∏ –≤–∞—Å.
    –°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤—ã–¥–∞–ª–∞ –ª–∞—é—â–∏–π —Å–º–µ—Ö –∏ –∑–ª–æ—Å—Ç–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞ –ø–æ–∏—Å–∫ –≤–æ—Ä–∏—à–µ–∫. –ò —Ö–æ—Ç—è –¥—Ä—É–∑—å—è –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å —Å –ø—Ä–µ–≤—Ä–∞—Ç–Ω–æ—Å—Ç—è–º–∏ –∏ –æ–±–ª–∞–¥–∞–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ –æ–ø—Ä–∞–≤–¥–∞–Ω–∏—è–º–∏, —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –Ω–æ—á—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ –±—ã–ª–æ –∂–∏–∑–Ω—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.
    –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª—É—á–∞—è —Å—Ç—Ä–∞—Ö –ø–æ–≤—Å—Ç—Ä–µ—á–∞—Ç—å —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü—É –≤ –ø–æ–ª–Ω–æ—á—å –∑–∞—Å—Ç–∞–≤–∏–ª –∏—Ö –≥–ª—É–±–æ–∫–æ –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–∏—Ç—å –∏–¥–µ—é –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –Ω–µ–ø—Ä–µ–¥—É–º—ã—à–ª–µ–Ω–Ω—ã—Ö –Ω–æ—á–Ω—ã—Ö –ø—Ä–æ–≥—É–ª–æ–∫ –≤ –∑–æ–æ–ø–∞—Ä–∫–µ.
    """

    _animal: str
    _wild_animal: str
    _item: str

    def create_story_steps(self) -> list[StoryStep]:
        return [
            self.make_entity_step(
                "–ù–∞–∑–æ–≤–∏ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å –∂–∏–≤–æ—Ç–Ω–æ–µ.",
                lambda i: setattr(self, "_animal", i.subject[0]),
            ),
            self.make_entity_step(
                "–ù–∞–∑–æ–≤–∏ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å –∂–∏–≤–æ—Ç–Ω–æ–µ —Å –æ—Å—Ç—Ä—ã–º–∏ –∑—É–±–∞–º–∏.",
                lambda i: setattr(self, "_wild_animal", i.subject[0]),
            ),
            self.make_entity_step(
                "–ù–∞–∑–æ–≤–∏ –ª—é–±–æ–π –ø—Ä–µ–¥–º–µ—Ç —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–π –∏–ª–∏ –Ω–∞ —É–ª–∏—Ü–µ.",
                lambda i: setattr(self, "_item", i.subject[0]),
            ),
            self._tell_story,
        ]

    def _tell_story(self) -> None:
        animal_ablt_plur = inflect(self._animal, ["ablt", "plur"])
        item_ablt_plur = inflect(self._item, ["ablt", "plur"])

        self._api.say(
            # "–í—Å–ø–æ–º–Ω–∏–ª–∞ –∏—Å—Ç–æ—Ä–∏—é.",
            "–û–¥–Ω–∞–∂–¥—ã –≤ –ø–æ–ª–Ω–æ—á—å –≤ –∑–æ–æ–ø–∞—Ä–∫ —Ä–µ—à–∏–ª–∏ –Ω–∞–≤–µ–¥–∞—Ç—å—Å—è —Ç—Ä–æ–µ –¥—Ä—É–∑–µ–π - –í–∞—Å—è, –ü–µ—Ç—è –∏ –ú–∏—à–∞.",
            f"–û–Ω–∏ –∑–∞–±—Ä–∞–ª–∏—Å—å —á–µ—Ä–µ–∑ –∑–∞–±–æ—Ä, —á—Ç–æ–±—ã –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å {animal_ablt_plur}, –∫–æ–≥–¥–∞ –≤—Å–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ —É–∂–µ —É—à–ª–∏.",
            "–í–Ω–µ–∑–∞–ø–Ω–æ, –∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞ –ø–æ—è–≤–∏–ª–∞—Å—å —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–æ–æ–ø–∞—Ä–∫–∞ - —Å—Ç—Ä–∞—à–Ω–∞—è —Å—Ç–∞—Ä—É—Ö–∞ —Å –∫–æ—Å–æ–π.",
            f"–î—Ä—É–∑—å—è –≤ —É–∂–∞—Å–µ —Å–µ–ª–∏ –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–ø–∞–≤—à—É—é—Å—è —Å–∫–∞–º–µ–π–∫—É –∏ —Ç—É—Ç –∂–µ –ø—Ä–∏—Ç–≤–æ—Ä–∏–ª–∏—Å—å {item_ablt_plur}, –Ω–∞–¥–µ—è—Å—å, —á—Ç–æ —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏—Ö –Ω–µ –∑–∞–º–µ—Ç–∏—Ç.",
            "",
            TextReply(
                f"- –ü—Ä–∏—Ç–≤–æ—Ä–∏–ª–∏—Å—å {item_ablt_plur}? –•–æ—Ç–µ–ª –±—ã —è –Ω–∞ —ç—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.",
                voice=Voice.ZAHAR_GPU,
            ),
            "- –û—Ç —Å—Ç—Ä–∞—Ö–∞ –µ—â—ë –Ω–µ —Ç–∞–∫ –ø—Ä–∏—Ç–≤–æ—Ä–∏—à—å—Å—è. –†–∞—Å—Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±—ã–ª–æ –¥–∞–ª—å—à–µ?",
        )

        # üî• button –¥–∞–ª—å—à–µ

        @self._api.otherwise
        async def _():
            item_accs_plur = inflect(self._item, ["accs", "plur"])
            animal_adj = await add_random_adjective(self._animal, "nomn")
            wild_animal_adj = await add_random_adjective(self._wild_animal, "nomn")

            self._api.say(
                f"–°—Ç–∞—Ä—É—Ö–∞ –º–µ–¥–ª–µ–Ω–Ω–æ –∏–¥–µ—Ç –≤ –∏—Ö —Å—Ç–æ—Ä–æ–Ω—É, –æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –ø—É—Å—Ç—É—é—â–∏–π –∑–æ–æ–ø–∞—Ä–∫. –ü–æ–¥–æ–π–¥—è –±–ª–∏–∂–µ, –æ–Ω–∞ –≥–ª—è–¥–∏—Ç –Ω–∞ ¬´{item_accs_plur}¬ª –∏ –∫—Ä–∏—á–∏—Ç:",
                "-–ê–≥–∞! –Ø –≤–∞—Å —Ä–∞–∑–æ–±–ª–∞—á—É!",
                "–û–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –í–∞—Å–µ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:",
                f"- –¢—ã {self._item}?",
                "–í–∞—Å—è –Ω–µ –º–æ—Ä–≥–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–∫–æ—Ä—É—é —Ä—É–∫—É:"
                f"- –ù–µ—Ç, —è {animal_adj}, –¥–∞–∂–µ –µ—Å–ª–∏ —è –∏ –Ω–µ –¥–≤–∏–≥–∞—é—Å—å.",
                "–°—Ç–∞—Ä—É—Ö–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –ü–µ—Ç–µ:",
                f"- –ê —Ç—ã {self._item}?",
                "–ü–µ—Ç—è –æ—Ç–≤–µ—Ç–∏–ª –≤ —Ç–æ–Ω:",
                f"- –ù–µ—Ç, —è {wild_animal_adj} –∏ –º–æ–≥—É –≤–∞—Å —É–∫—É—Å–∏—Ç—å.",
                "",
                TextReply(
                    "- –ù–∞–¥–µ—é—Å—å, –ü–µ—Ç—è –Ω–µ —É–∫—É—Å–∏–ª –±–µ–¥–Ω—É—é –±–∞–±—É—à–∫—É?",
                    voice=Voice.ZAHAR_GPU,
                ),
                "- –ü–æ—Å—Ç–∏—Å–Ω—è–ª—Å—è. –†–∞—Å—Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±—ã–ª–æ –¥–∞–ª—å—à–µ?",
            )

            @self._api.otherwise
            async def _():
                item_nomn_plur = inflect(self._item, ["nomn", "plur"])
                item_adj = await add_random_adjective(self._item, "nomn")
                common_item = by_gender(self._item, "–æ–±—ã—á–Ω", "—ã–π", "–∞—è", "–æ–µ")

                self._api.say(
                    "–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –Ω–∞ –º–∏–Ω—É—Ç—É –∑–∞–¥—É–º–∞–ª–∞—Å—å, –ø–æ—á–µ—Å–∞–ª–∞ –∫–æ—Å–æ–π –ø–æ –¥–µ—Ä–µ–≤—É, –∞ –∑–∞—Ç–µ–º –∏–¥–µ—Ç –∫ –ú–∏—à–µ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:",
                    f"- –¢–∞–∫ –∏ —Ç—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —Ç–æ–∂–µ –Ω–µ {self._item}?",
                    "–ú–∏—à–∞ –æ—Ç–≤–µ—á–∞–µ—Ç:",
                    f"- –Ø, –ø—Ä–∞–≤–¥–∞, {common_item} {item_adj}!",
                    "–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –æ—Ç –∑–ª–æ—Å—Ç–∏ –≤—ã–¥–∞–ª–∞ –∂—É—Ç–∫–∏–π –ª–∞—é—â–∏–π —Å–º–µ—Ö –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–ª–∞ –ø–æ–∏—Å–∫ –≤–æ—Ä–∏—à–µ–∫.",
                    "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª—É—á–∞—è, —Å—Ç—Ä–∞—Ö –ø–æ–≤—Å—Ç—Ä–µ—á–∞—Ç—å —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü—É –∑–∞—Å—Ç–∞–≤–∏–ª –∏—Ö –ø–æ–ª—É—á—à–µ –ø–æ–¥—É–º–∞—Ç—å, —Å—Ç–æ–∏—Ç –ª–∏ –≥—É–ª—è—Ç—å –≤ –∑–æ–æ–ø–∞—Ä–∫–µ –Ω–æ—á—å—é.",
                    "",
                    TextReply(
                        f"- –ñ—É—Ç–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è. –ú–Ω–µ —Ç–µ–ø–µ—Ä—å –≤—Å—é –Ω–æ—á—å –±—É–¥—É—Ç {item_nomn_plur} —Å–Ω–∏—Ç—å—Å—è.",
                        voice=Voice.ZAHAR_GPU,
                    ),
                    "- –î–∞. –î–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –ø–æ–π–º—É, –∫–∞–∫ –∏–º —É–¥–∞–ª–æ—Å—å –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å.",
                )

                await self.goto_next_step()
